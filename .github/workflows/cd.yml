# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CD

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
#  test:
#    name: Test application
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v4
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v4
#      with:
#        dotnet-version: 8.0.x
#    - name: Test
#      run: dotnet test tests/Whojoo.PerformanceCounter.Tests/Whojoo.PerformanceCounter.Tests.csproj

  semantic-release:
#    needs: test
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v2
#      with:
#        dotnet-version: 8.0.x
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: false
        dry_run: 'true'
    - name: Temp test
      if: ${{ steps.tag_version.outputs.new_version == 'undefined' }}
      run: dotnet test
#    - name: Create a GitHub release
#      uses: ncipollo/release-action@v1
#      with:
#        tag: ${{ steps.tag_version.outputs.new_tag }}
#        name: Release ${{ steps.tag_version.outputs.new_tag }}
#        body: ${{ steps.tag_version.outputs.changelog }}
#    - name: Build app
#      run: dotnet build -c Release ./src/Whojoo.PerformanceCounter/Whojoo.PerformanceCounter.csproj
#    - name: Create Nuget Package
#      run: dotnet pack -c Release -p:PackageVersion=${{ steps.tag_version.outputs.new_version }} -o . ./src/Whojoo.PerformanceCounter/Whojoo.PerformanceCounter.csproj
#    - name: Upload Package for Publishing
#      uses: actions/upload-artifact@v3
#      with:
#        name: PackedLib
#        path: ./*.nupkg

#  nuget-publish:
#    needs: semantic-release
#    name: Publish to Nuget
#    runs-on: ubuntu-latest
#    steps:
#    - name: Download built project
#      uses: actions/download-artifact@v3
#      with:
#        name: PackedLib
#    - name: Setup .NET
#      uses: actions/setup-dotnet@v2
#      with:
#        dotnet-version: 8.0.x
#    - name: Push Package to Nuget
#      run: dotnet nuget push --api-key ${{secrets.NUGET_API_KEY}} --source "https://api.nuget.org/v3/index.json" *.nupkg
